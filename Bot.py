from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

TOKEN = '6920885849:AAGGDOJbSuYXoBrRuMHHWzIH0GAODXcZUzI'

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('–í–∏ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –Ω–∞ –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ –±–æ—Ç–∞! –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "/stop"!!!üòÉ')

def menu(update: Update, context: CallbackContext) -> None:
    menu_text = (
        "üéâ –ü—Ä–∏–≤—ñ—Ç –≤—ñ–¥ 'CIS'! üåü\n"
        "üöÄ–í—ñ—Ç–∞—î–º–æ —É —Å–≤—ñ—Ç—ñ 3D —Ç–∞ —Ç–≤–æ—Ä—á–æ—Å—Ç—ñ! –ó–Ω–∞—î–º–æ, —è–∫ –∑—Ä–æ–±–∏—Ç–∏ –≤–∞—à—ñ —ñ–¥–µ—ó —Ä–µ–∞–ª—å–Ω—ñ—Å—Ç—é.\n"
        "üåê–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ —É 43 –∫—Ä–∞—ó–Ω–∞—Ö, —ñ —Ç—É—Ç –≥–æ—Ç–æ–≤—ñ –≤–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏!\n"
        "üí¨ –Ø–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞, –ø–∏—à—ñ—Ç—å –Ω–∞–º.\n"
        "üåà‚ú®–†–∞–∑–æ–º —Å—Ç–≤–æ—Ä—é—î–º–æ –º–∞–π–±—É—Ç–Ω—î! üåà‚ú®"
    )
    update.message.reply_text(menu_text)

def courses(update: Update, context: CallbackContext) -> None:
    update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –∫—É—Ä—Å –¥–ª—è –∑–∞–ø–∏—Å—É:", reply_markup=get_courses_keyboard())

def get_courses_keyboard():
    from telegram import ReplyKeyboardMarkup

    keyboard = [
        ["–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –í—ñ—Ç–∞–ª—ñ–∫–∞.", "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –î–∞–Ω–∏–ª–∞."],
    ]

    return ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

def handle_text(update: Update, context: CallbackContext) -> None:
    text = update.message.text
    if text == "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –í—ñ—Ç–∞–ª—ñ–∫–∞.":
        update.message.reply_text("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –í—ñ—Ç–∞–ª—ñ–∫–∞.")
        context.user_data['waiting_for_name'] = True
        context.user_data['course'] = '–í—ñ—Ç–∞–ª—ñ–∫–∞'
    elif text == "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –î–∞–Ω–∏–ª–∞.":
        update.message.reply_text("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –î–∞–Ω–∏–ª–∞.")
        context.user_data['waiting_for_name'] = True
        context.user_data['course'] = '–î–∞–Ω–∏–ª–∞'

def handle_name(update: Update, context: CallbackContext) -> None:
    name = update.message.text
    context.user_data['name'] = name
    update.message.reply_text("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.")
    context.user_data['waiting_for_name'] = False
    context.user_data['waiting_for_phone'] = True

def handle_phone(update: Update, context: CallbackContext) -> None:
    phone_number = update.message.text
    course = context.user_data['course']
    name = context.user_data['name']
    update.message.reply_text(f"–î—è–∫—É—î–º–æ, {name}! –í–∏ –∑–∞–ø–∏—Å–∞–Ω—ñ –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ {course}. –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}")

def lucky_test(update: Update, context: CallbackContext) -> None:
    import random
    lucky = random.choice([True, False])
    if lucky:
        update.message.reply_text("–í–µ–∑—É—á—ñ!")
    else:
        update.message.reply_text("–ù–µ–≤–µ–∑—É—á—ñ")

def main() -> None:
    updater = Updater(TOKEN)

    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("menu", menu))
    dp.add_handler(MessageHandler(Filters.regex("^(–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –í—ñ—Ç–∞–ª—ñ–∫–∞.|–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫—É—Ä—Å–∏ –¥–æ –î–∞–Ω–∏–ª–∞.)$"), courses))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command & Filters.regex("^(?!/).*"), handle_text))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command & Filters.regex("^(?!.*/).*"), handle_name))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command & Filters.regex("^(?!.*/).*"), handle_phone))
    dp.add_handler(CommandHandler("lucky_test", lucky_test))

    updater.start_polling()

    updater.idle()

if __name__ == '__main__':
    main()
